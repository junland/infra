---
- name: Configure motd
  ansible.builtin.template:
      src: motd.j2
      dest: /etc/motd

- name: Put SELinux in permissive mode (RHEL Family)
  ansible.posix.selinux:
      policy: targeted
      state: permissive
  when:
      - ansible_os_family in ['RedHat', 'CentOS', 'Rocky', 'AlmaLinux']
      - not docker_testing

- name: Add logrotate configurations
  copy:
    src: "logrotate/logrotate-{{ item.name }}.conf"
    dest: "/etc/logrotate.d/{{ item.name }}"
    owner: root
    group: root
    force: true
  loop:
    - { name: bootlog }
    - { name: btmp }
    - { name: chrony }
    - { name: dnf }
    - { name: firewalld }
    - { name: syslog }

- name: Add rsyslog configuration
  copy:
      src: rsyslog/rsyslog.conf
      dest: "/etc/rsyslog.conf"
      owner: root
      group: root
      force: true

- name: Create rsyslog log directory
  ansible.builtin.file:
      path: "/var/log/rsyslog"
      state: directory
      mode: "0700"

- name: Add smartd configuration for rsyslog
  copy:
    src: rsyslog/rsyslog-smartd.conf
    dest: "/etc/rsyslog.d/smartd.conf"
    owner: root
    group: root
    force: true

- name: Add limits configuration
  copy:
    src: limits.conf
    dest: "/etc/security/limits.d/limits.conf"
    owner: root
    group: root
    force: true

- name: Add sysctl tune configuration
  copy:
    src: tune-sysctl.conf
    dest: "/etc/sysctl.d/01-tune.conf"
    owner: root
    group: root
    force: true

- name: Apply sysctl tune
  command: sysctl --system
  when:
      - not docker_testing

- name: Setup alternate SSH port
  lineinfile:
      dest: "/etc/ssh/sshd_config"
      regexp: "^Port"
      line: "Port {{ sshd_port }}"
  when:
      - not docker_testing

- name: Add smartd configuration
  copy:
      src: smartd.conf
      dest: "/etc/smartmontools/smartd.conf"
      owner: root
      group: root
      force: true
  when:
      - not docker_testing

- name: Add new samba config file
  copy:
      src: smb.conf
      dest: "/etc/samba/smb.conf"
      owner: root
      group: root
      force: true
  when:
      - samba_enabled|bool

- name: Add new nfs config file
  copy:
      src: nfs.conf
      dest: "/etc/nfs.conf"
      owner: root
      group: root
      force: true
  when:
      - nfs_enabled|bool

- name: Create nfs-server service to nfs service symlink
  file:
      src: "/usr/lib/systemd/system/nfs-server.service"
      dest: "/usr/lib/systemd/system/nfs.service"
      state: link
      force: yes
  when:
      - ansible_os_family in ['RedHat', 'CentOS', 'Rocky', 'AlmaLinux']
      - not docker_testing
      - nfs_enabled|bool

- name: Allow nfs in firewalld
  firewalld:
      service: nfs
      permanent: yes
      immediate: yes
      zone: public
      state: enabled
  when:
      - ansible_os_family in ['RedHat', 'CentOS', 'Rocky', 'AlmaLinux']
      - not docker_testing
      - nfs_enabled|bool

- name: Allow mountd in firewalld
  firewalld:
      service: mountd
      permanent: yes
      immediate: yes
      zone: public
      state: enabled
  when:
      - ansible_os_family in ['RedHat', 'CentOS', 'Rocky', 'AlmaLinux']
      - not docker_testing
      - nfs_enabled|bool

- name: Allow samba in firewalld
  firewalld:
      service: samba
      permanent: yes
      immediate: yes
      zone: public
      state: enabled
  when:
      - ansible_os_family in ['RedHat', 'CentOS', 'Rocky', 'AlmaLinux']
      - not docker_testing
      - samba_enabled|bool

- name: Remove unneeded services in /etc/init.d
  file:
      path: "/etc/init.d/{{ item }}"
      state: absent
  with_items:
      - acpid
      - atd
      - auditd
      - zfs-load-key
      - sysfsconf
      - net-online
      - swap
      - swclock
      - numlock
      - acct
      - ebtables
      - rdate
      - staticroute
  when:
      - ansible_os_family in ['Alpine']

- name: Add default linux modules to load automatically in /etc/modules
  lineinfile:
      path: "/etc/modules"
      line: "{{ item }}"
      create: yes
  with_items:
      - "af_packet"
      - "br_netfilter"
      - "ipv6"
      - "tun"
      - "xt_conntrack"
  when:
      - ansible_os_family in ['Alpine']

- name: Append zfs module to load automatically in /etc/modules
  lineinfile:
      path: "/etc/modules"
      line: "{{ item }}"
      create: yes
  with_items:
      - zfs
  when:
      - zfs_enabled|bool
      - ansible_os_family in ['Alpine']

- name: Add zfs-mod.conf to /etc/modprobe.d
  copy:
      src: zfs-mod.conf
      dest: "/etc/modprobe.d/zfs-mod.conf"
      owner: root
      group: root
      force: true
  when:
      - zfs_enabled|bool
