#
# Configures the k3s installation and sets up kubectl and helm
#

- name: Download helm installation script
  get_url:
      url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
      dest: /tmp/get_helm.sh
      mode: "0755"
  when: k3s_install_exec == "server"

- name: Create kubctl configuration directory
  file:
      path: /root/.kube
      state: directory
      mode: "0755"
  when: k3s_install_exec == "server"

- name: Copy kubectl configuration
  copy:
      src: /etc/rancher/k3s/k3s.yaml
      dest: /root/.kube/config
      mode: "0644"
      remote_src: true
  when: k3s_install_exec == "server"

- name: Generate kubectl bash completion script
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
  args:
      creates: /etc/bash_completion.d/kubectl
  when: k3s_install_exec == "server"

- name: Install helm
  shell: /tmp/get_helm.sh
  args:
      creates: /usr/local/bin/helm
  when: k3s_install_exec == "server"

- name: Generate helm bash completion script
  shell: helm completion bash > /etc/bash_completion.d/helm
  args:
      creates: /etc/bash_completion.d/helm
  when: k3s_install_exec == "server"

# Label agent nodes with the agent role if k3s_install_exec is "agent"
- name: Label agent nodes
  command: kubectl label node {{ item }} node-role.kubernetes.io/agent=true --overwrite
  loop: "{{ groups['internal_servers'] | difference([inventory_hostname]) }}"
  when: k3s_install_exec == "server"

# Add helm repositories using the helm command line from a list of repos.
- name: Add helm repositories
  command: helm repo add {{ item.name }} {{ item.url }}
  loop:
      - name: "haproxytech"
        url: "https://haproxytech.github.io/helm-charts"
      - name: "metallb"
        url: "https://metallb.github.io/metallb"
  when: k3s_install_exec == "server"

# Check that metallb is not already installed
- name: Check if metallb is already installed
  command: helm status -n metallb-system metallb
  register: metallb_check
  failed_when: false
  changed_when: false
  when:
      - k3s_install_exec == "server"
      - k3s_metallb_ip_pool is defined and k3s_metallb_ip_pool != ""

# Put metallb kube config with jinja2 template of metallb.j2
- name: Put metallb kube config with jinja2 template
  template:
      src: metallb-config.j2
      dest: /tmp/metallb-config.yaml
      mode: "0644"
  when:
      - k3s_install_exec == "server"
      - k3s_metallb_ip_pool is defined and k3s_metallb_ip_pool != ""
      - metallb_check.failed or metallb_check.stdout == ""

# Install metallb using helm if it is not already installed
- name: Install metallb using helm
  command: helm install --create-namespace --wait --hide-notes -n metallb-system metallb metallb/metallb
  when:
      - k3s_install_exec == "server"
      - k3s_metallb_ip_pool is defined and k3s_metallb_ip_pool != ""
      - metallb_check.failed or metallb_check.stdout == ""

# Apply metallb IP pool configuration
- name: Apply metallb IP pool configuration
  command: kubectl apply -f /tmp/metallb-config.yaml
  when:
      - k3s_install_exec == "server"
      - k3s_metallb_ip_pool is defined and k3s_metallb_ip_pool != ""
      - metallb_check.failed or metallb_check.stdout == ""

# Check that haproxy is not already installed
- name: Check if haproxy is already installed
  command: helm status -n haproxy-ingress haproxy
  register: haproxy_check
  failed_when: false
  changed_when: false
  when:
      - k3s_install_exec == "server"
      - k3s_metallb_ip is defined and k3s_metallb_ip != ""

# Install haproxy using helm if it is not already installed
- name: Install haproxy using helm
  command: helm install --create-namespace --wait --hide-notes -n haproxy-ingress haproxy haproxytech/kubernetes-ingress --set {{ k3s_haproxy_values }}
  when:
      - k3s_install_exec == "server"
      - k3s_metallb_ip is defined and k3s_metallb_ip != ""
      - haproxy_check.failed or haproxy_check.stdout == ""
