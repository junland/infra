# Check if domain PEM certificate file is present on the file system
- name: Check if domain PEM certificate file is present on the file system
  ansible.builtin.stat:
      path: "/etc/pki/ca-trust/source/anchors/{{ k3s_domain }}.pem"
  register: domain_pem_file
  when:
      - k3s_domain is defined
      - k3s_domain != ""
      - k3s_install_exec == "server"

# Check if domain key is present on the file system
- name: Check if domain key file is present on the file system
  ansible.builtin.stat:
      path: "/etc/pki/tls/private/{{ k3s_domain }}.key"
  register: domain_key_file
  when:
      - k3s_domain is defined
      - k3s_domain != ""
      - k3s_install_exec == "server"

# Check if certificate and key have been added with kubectl
- name: Check if certificate and key have been added with kubectl
  ansible.builtin.command:
      cmd: "kubectl get secret -n haproxy-ingress haproxy-kubernetes-ingress-domain-cert -o name"
  register: cert_key
  changed_when: false
  failed_when: false
  when:
      - k3s_domain is defined
      - k3s_domain != ""
      - k3s_install_exec == "server"
      - domain_pem_file is defined
      - domain_key_file is defined
      - domain_pem_file.stat.exists == true

# Create the tls secret if it does not exist
- name: Create the tls secret if it does not exist
  ansible.builtin.command:
      cmd: "kubectl create secret tls haproxy-kubernetes-ingress-domain-cert --cert=/etc/pki/ca-trust/source/anchors/{{ k3s_domain }}.pem --key=/etc/pki/tls/private/{{ k3s_domain }}.key -n haproxy-ingress"
  when:
      - k3s_domain is defined
      - k3s_domain != ""
      - k3s_install_exec == "server"
      - domain_pem_file is defined
      - domain_key_file is defined
      - domain_pem_file.stat.exists == true
      - domain_key_file.stat.exists == true
      - cert_key is defined
      - cert_key.stdout != "secret/haproxy-kubernetes-ingress-domain-cert"
