#!/bin/bash

set -e

msg_info() {
  echo -e "\e[94m >>>> $1 \e[0m"
}

msg_fail() {
  echo -e "\e[31m >>>> $1 \e[0m"
  exit 1
}

[ "${EUID}" -eq "0" ] || msg_fail "$0: Script must be run via sudo or root user"

msg_info "Getting OS info..."

. /etc/os-release

msg_info "Installing and setting up KVM..."

dnf install qemu-kvm libvirt virt-install edk2-ovmf bridge-utils -y

msg_info "Enabling libvirtd..."

systemctl enable libvirtd

msg_info "Adding netfilter module..."

echo "br_netfilter" > /etc/modules-load.d/br_netfilter.conf

msg_info "Adding netfilter sysctl configuration..."

cat << EOF > /etc/sysctl.d/02-netfilter.conf
# Disable netfilter for KVM.
net.bridge.bridge-nf-call-ip6tables = 0
net.bridge.bridge-nf-call-iptables = 0
net.bridge.bridge-nf-call-arptables = 0
EOF

msg_info "Downloading and Injecting OVMF.fd binary..."

wget https://github.com/clearlinux/common/raw/master/OVMF.fd -O /usr/share/OVMF/OVMF.fd

msg_info "Creating OVMF directory symlink..."

ln -sv /usr/share/OVMF /usr/share/ovmf

msg_info "Creating br0 to network scripts..."

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-br0
# Autogenerated from packer, please edit before using.
NAME=br0
DEVICE=br0
TYPE=Bridge
UUID=88259cfd-d20a-4453-b43a-f3018fde513e
IPADDR=192.168.1.69
PREFIX=22
GATEWAY=192.168.1.1
DNS1=192.168.1.1
DNS2=1.1.1.1
DNS3=1.0.0.1
DNS4=9.9.9.9
DNS5=8.8.8.8
STP=no
ONBOOT=no
EOF

cat << EOF > /etc/sysconfig/network-scripts/ifcfg-eth0
# Autogenerated from packer, please edit before using.
DEVICE=eth0
TYPE=Ethernet
BRIDGE=br0
ONBOOT=no
EOF

msg_info "Creating template br0 bridge for libvirt..."

cat << EOF > /etc/bridge.example.xml
<network>
  <name>bridged-network</name>
  <uuid>81f653af-bfc5-48c5-8e41-6f7e4265cd2f</uuid>
  <forward mode='bridge'/>
  <bridge name='br0'/>
</network>
EOF

msg_info "Finished $0..."
